{
  "definitions": {},
  "host": "localhost:3333",
  "info": {
    "title": "express-typeorm-postgres",
    "version": "0.0.1",
    "license": {
      "name": "MIT"
    },
    "description": "Specification JSONs: [v2](/api-spec/v2), [v3](/api-spec/v3).\n\nexpress, typescript, REST"
  },
  "paths": {
    "*": {
      "options": {
        "summary": "*",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {},
        "tags": []
      }
    },
    "/health": {
      "get": {
        "summary": "/health",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "database": {
                  "type": "string",
                  "example": "PostgreSQL 15.1 (Debian 15.1-1.pgdg110+1) on aarch64-unknown-linux-gnu, compiled by gcc (Debian 10.2.1-6) 10.2.1 20210110, 64-bit"
                },
                "redisCacheConnection": {
                  "type": "string",
                  "example": "CONNECTED"
                },
                "redisQueueHealth": {
                  "type": "object",
                  "properties": {
                    "connection": {
                      "type": "string",
                      "example": "PONG"
                    },
                    "activeCount": {
                      "type": "number",
                      "example": 0
                    },
                    "waitingCount": {
                      "type": "number",
                      "example": 0
                    },
                    "completedCount": {
                      "type": "number",
                      "example": 2
                    },
                    "failedCount": {
                      "type": "number",
                      "example": 0
                    }
                  }
                }
              }
            }
          },
          "304": {}
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/technology": {
      "get": {
        "summary": "/technology",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "displayName": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "displayName",
                  "description"
                ]
              }
            }
          },
          "304": {}
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      },
      "post": {
        "summary": "/technology",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string",
                  "example": "BullMQ"
                },
                "description": {
                  "type": "string",
                  "example": "A javascript library that leverages Redis to set up queues"
                }
              }
            }
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 12
                }
              }
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/technology/{technologyId}": {
      "get": {
        "summary": "/technology/{technologyId}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "technologyId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "displayName": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              },
              "required": [
                "id",
                "displayName",
                "description"
              ]
            }
          },
          "304": {}
        },
        "tags": []
      },
      "put": {
        "summary": "/technology/{technologyId}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "technologyId",
            "in": "path",
            "required": true
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "displayName": {
                  "type": "string",
                  "example": "BullMQ"
                },
                "description": {
                  "type": "string",
                  "example": "A javascript library that leverages Redis to set up queues"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 12
                }
              }
            }
          }
        },
        "tags": []
      },
      "delete": {
        "summary": "/technology/{technologyId}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "technologyId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Accepted",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 12
                }
              }
            }
          }
        },
        "tags": []
      }
    },
    "/competition": {
      "get": {
        "summary": "/competition",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {},
        "tags": []
      },
      "post": {
        "summary": "/competition",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {},
        "tags": []
      }
    },
    "/competition/{id}": {
      "get": {
        "summary": "/competition/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      },
      "put": {
        "summary": "/competition/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      },
      "delete": {
        "summary": "/competition/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/athlete": {
      "post": {
        "summary": "/athlete",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {},
        "tags": []
      },
      "get": {
        "summary": "/athlete",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {},
        "tags": []
      }
    },
    "/athlete/{id}": {
      "get": {
        "summary": "/athlete/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      },
      "put": {
        "summary": "/athlete/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      },
      "delete": {
        "summary": "/athlete/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/athlete/nombre/{name}": {
      "get": {
        "summary": "/athlete/nombre/{name}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/club": {
      "post": {
        "summary": "/club",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {},
        "tags": []
      },
      "get": {
        "summary": "/club",
        "consumes": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "number"
                  },
                  "name": {
                    "type": "string"
                  },
                  "flagUrl": {
                    "type": "string"
                  }
                },
                "required": [
                  "id",
                  "name",
                  "flagUrl"
                ]
              }
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      }
    },
    "/club/{id}": {
      "get": {
        "summary": "/club/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      },
      "put": {
        "summary": "/club/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      },
      "delete": {
        "summary": "/club/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/club/nombre/{name}": {
      "get": {
        "summary": "/club/nombre/{name}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/result/competition/{id}": {
      "get": {
        "summary": "/result/competition/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/result/competition/{competitionId}/athlete/{athleteId}": {
      "get": {
        "summary": "/result/competition/{competitionId}/athlete/{athleteId}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "competitionId",
            "in": "path",
            "required": true
          },
          {
            "name": "athleteId",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/result/athlete/{id}": {
      "get": {
        "summary": "/result/athlete/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/result/club/{id}": {
      "get": {
        "summary": "/result/club/{id}",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true
          }
        ],
        "responses": {},
        "tags": []
      }
    },
    "/queue": {
      "post": {
        "summary": "/queue",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "string",
                  "example": "It can be anything"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "jobId": {
                  "type": "string",
                  "example": "6"
                }
              }
            }
          }
        },
        "tags": [],
        "produces": [
          "application/json"
        ]
      }
    }
  },
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "tags": []
}